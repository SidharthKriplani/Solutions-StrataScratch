POSTGRE SQL:

WITH c1 AS 
(
SELECT *, 
CASE 
WHEN clicked = 0 THEN 1
WHEN clicked = 1 AND search_results_position > 3 THEN 2
WHEN clicked = 1 AND search_results_position < 4 THEN 3
END AS search_results_rating 
FROM fb_search_events
), 

c2 AS
(
select search_id, search_results_rating, 
DENSE_RANK() OVER(PARTITION BY search_id ORDER BY search_results_rating DESC) AS max_rating
FROM c1
)

SELECT DISTINCT search_id, search_results_rating AS max_rating
FROM c2 
WHERE max_rating = 1


PYTHON

fb_search_events['search_results_rating'] = 0
def ranker(click, pos):
    if click == 0:
        return 1
    elif click ==1 and pos > 3:
        return 2
    elif click == 1 and pos < 4:
        return 3
    else:  
        pass 

fb_search_events['search_results_rating'] = pd.Series()

for i in range(0, len(fb_search_events)):
    fb_search_events['search_results_rating'][i] = ranker(fb_search_events['clicked'][i], fb_search_events['search_results_position'][i])

fb_search_events[['search_id', 'search_results_rating']].groupby(['search_id'], as_index = False).max()
