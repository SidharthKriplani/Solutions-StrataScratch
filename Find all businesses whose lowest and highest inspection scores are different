POSTGRE SQL:

WITH lowest_inspection_score AS
(
SELECT business_name, inspection_score, 
DENSE_RANK() OVER(PARTITION BY business_name ORDER BY inspection_score ASC) min_score
FROM sf_restaurant_health_violations
WHERE inspection_score IS NOT NULL
), 

highest_inspection_score AS
(
SELECT business_name, inspection_score, 
DENSE_RANK() OVER(PARTITION BY business_name ORDER BY inspection_score DESC) max_score
FROM sf_restaurant_health_violations
WHERE inspection_score IS NOT NULL
)

SELECT DISTINCT
a.business_name, a.inspection_score min_score, b.inspection_score max_score
FROM
(SELECT business_name, inspection_score
FROM lowest_inspection_score 
WHERE min_score = 1) a
JOIN 
(SELECT business_name, inspection_score
FROM highest_inspection_score
WHERE max_score = 1) b

ON a.business_name = b.business_name
WHERE a.inspection_score != b.inspection_score 
ORDER BY 1


PYTHON:

lowest_inspection_score = sf_restaurant_health_violations[['business_name', 'inspection_score']]
lowest_inspection_score['min_score'] = sf_restaurant_health_violations[sf_restaurant_health_violations['inspection_score'].notnull()].groupby('business_name', as_index = False)['inspection_score'].rank(method = 'dense', ascending = True)

highest_inspection_score = sf_restaurant_health_violations[['business_name', 'inspection_score']]
highest_inspection_score['max_score'] = sf_restaurant_health_violations[sf_restaurant_health_violations['inspection_score'].notnull()].groupby('business_name', as_index = False)['inspection_score'].rank(method = 'dense', ascending = False)

his = highest_inspection_score[highest_inspection_score['max_score']==1][['business_name', 'inspection_score']].rename(columns = {'inspection_score': 'min_score'})
lis = lowest_inspection_score[lowest_inspection_score['min_score']==1][['business_name', 'inspection_score']].rename(columns = {'inspection_score': 'max_score'})

df = pd.merge(his, lis, on = 'business_name')
df[df['min_score']!=df['max_score']].drop_duplicates()


R:
