POSTGRE SQL:

WITH main AS
(
SELECT owner_name, facility_address, facility_name, AVG(score) AS avg_score
FROM los_angeles_restaurant_health_inspections 
GROUP BY 1, 2, 3
), 

main_2 AS
(
SELECT owner_name, facility_name, facility_address, 
DENSE_RANK() OVER(PARTITION BY owner_name ORDER BY avg_score DESC, facility_name ASC) rankk
FROM main
), 

one AS
(SELECT owner_name, facility_address
FROM main_2
WHERE rankk = 1), 

two AS 
(SELECT owner_name, facility_address
FROM main_2
WHERE rankk = 2), 

three AS 
(SELECT owner_name, facility_address
FROM main_2
WHERE rankk = 3)

SELECT DISTINCT
one.owner_name, 
one.facility_address AS facility_1, 
two.facility_address AS facility_2, 
three.facility_address AS facility_3

FROM one
LEFT JOIN two ON one.owner_name = two.owner_name
LEFT JOIN three ON one.owner_name = three.owner_name
ORDER BY 1 ASC


PYTHON:

main = los_angeles_restaurant_health_inspections.groupby(['owner_name', 'facility_address', 'facility_name'], as_index = False)['score'].mean().rename(columns = {'score': 'avg_score'})
main_2 = main[['owner_name', 'facility_name', 'facility_address']]
main_2['rankk'] = main.groupby('owner_name', as_index = False)[['avg_score', 'facility_name']].rank(method = 'dense', ascending = [False, True]).astype(int)

one = main_2[main_2['rankk']==1]
one = one.rename(columns = {'facility_address': 'facility_1'})
two = main_2[main_2['rankk']==2]
two = two.rename(columns = {'facility_address': 'facility_2'})
three = main_2[main_2['rankk']==3]
three = three.rename(columns = {'facility_address': 'facility_3'})

one_two = pd.merge(one, two, on = 'owner_name', how = 'left')
one_two = one_two[['facility_1', 'owner_name', 'facility_2']]
one_three = pd.merge(one, three, on = 'owner_name', how = 'left')
one_three = one_three[['facility_3', 'owner_name']]

pd.merge(one_two, one_three, on = 'owner_name', how = 'inner')

-- this Python solution is not working correctly, some rows missing here or there 


R: 
